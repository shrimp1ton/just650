{"ast":null,"code":"// src/context/EssayContext.js\nimport React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const EssayContext=/*#__PURE__*/createContext();export const useEssays=()=>useContext(EssayContext);export const EssayProvider=_ref=>{let{children}=_ref;const[essays,setEssays]=useState([]);const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;// Access the environment variable\nuseEffect(()=>{const fetchEssays=async()=>{try{const response=await fetch(`${API_BASE_URL}/essays`);// Use the base URL from the environment variable\nif(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setEssays(data);}catch(error){console.error('Error fetching essays:',error);}};fetchEssays();},[API_BASE_URL]);const addEssay=async newEssay=>{try{const response=await fetch(`${API_BASE_URL}/essays`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newEssay)});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setEssays(prevEssays=>[...prevEssays,data]);}catch(error){console.error('Error adding essay:',error);}};const likeEssay=async id=>{try{const response=await fetch(`${API_BASE_URL}/essays/${id}/like`,{method:'PUT'});if(!response.ok){throw new Error('Network response was not ok');}const updatedEssay=await response.json();setEssays(prevEssays=>prevEssays.map(essay=>essay._id===updatedEssay._id?updatedEssay:essay));}catch(error){console.error('Error liking essay:',error);}};return/*#__PURE__*/_jsx(EssayContext.Provider,{value:{essays,addEssay,likeEssay},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","EssayContext","useEssays","EssayProvider","_ref","children","essays","setEssays","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchEssays","response","fetch","ok","Error","data","json","error","console","addEssay","newEssay","method","headers","body","JSON","stringify","prevEssays","likeEssay","id","updatedEssay","map","essay","_id","Provider","value"],"sources":["/Users/lance/just650/src/context/EssayContext.js"],"sourcesContent":["// src/context/EssayContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst EssayContext = createContext();\n\nexport const useEssays = () => useContext(EssayContext);\n\nexport const EssayProvider = ({ children }) => {\n  const [essays, setEssays] = useState([]);\n\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // Access the environment variable\n\n  useEffect(() => {\n    const fetchEssays = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/essays`); // Use the base URL from the environment variable\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setEssays(data);\n      } catch (error) {\n        console.error('Error fetching essays:', error);\n      }\n    };\n\n    fetchEssays();\n  }, [API_BASE_URL]);\n\n  const addEssay = async (newEssay) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newEssay),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setEssays((prevEssays) => [...prevEssays, data]);\n    } catch (error) {\n      console.error('Error adding essay:', error);\n    }\n  };\n\n  const likeEssay = async (id) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays/${id}/like`, {\n        method: 'PUT',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const updatedEssay = await response.json();\n      setEssays((prevEssays) =>\n        prevEssays.map((essay) => (essay._id === updatedEssay._id ? updatedEssay : essay))\n      );\n    } catch (error) {\n      console.error('Error liking essay:', error);\n    }\n  };\n\n  return (\n    <EssayContext.Provider value={{ essays, addEssay, likeEssay }}>\n      {children}\n    </EssayContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}