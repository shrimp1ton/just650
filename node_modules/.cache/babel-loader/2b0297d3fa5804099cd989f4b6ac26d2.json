{"ast":null,"code":"// src/components/SubmitTab.js\nimport React,{useState}from'react';import{useEssays}from'../context/EssayContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SubmitTab(){const[title,setTitle]=useState('');// State for the title\nconst[essay,setEssay]=useState('');// State for the essay content\nconst[authorName,setAuthorName]=useState('');// State for the author's name\nconst{addEssay}=useEssays();// Custom hook to access essay context\n// Fetch the API base URL from environment variables\nconst API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const handleSubmit=async e=>{e.preventDefault();// Validate input fields\nif(!title.trim()){alert('Title cannot be empty!');return;}if(!essay.trim()){alert('Essay content cannot be empty!');return;}try{// Send POST request to submit the essay\nconst response=await fetch(`${API_BASE_URL}/essays`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({title:title.trim(),content:essay.trim(),isAnonymous:!authorName.trim(),authorName:authorName.trim()||'Anonymous'})});// Check if the response was successful\nif(!response.ok){throw new Error('Failed to submit essay');}const newEssay=await response.json();// Use the addEssay function to update the context\naddEssay(newEssay);// Reset form fields after submission\nsetTitle('');setEssay('');setAuthorName('');alert('Essay submitted successfully!');}catch(error){console.error('Error submitting essay:',error);alert('There was an error submitting your essay. Please try again.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"submit-page\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),placeholder:\"Essay Title\",className:\"title-input\"// Optional class for styling\n}),/*#__PURE__*/_jsx(\"textarea\",{value:essay,onChange:e=>setEssay(e.target.value),placeholder:\"Write your essay here\",className:\"essay-input\"// Optional class for styling\n}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:authorName,onChange:e=>setAuthorName(e.target.value),placeholder:\"Author Name (Leave blank if you want to remain anonymous)\",className:\"author-name-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"subessay-button\",type:\"submit\",children:\"Submit Essay\"})]})});}export default SubmitTab;","map":{"version":3,"names":["React","useState","useEssays","jsx","_jsx","jsxs","_jsxs","SubmitTab","title","setTitle","essay","setEssay","authorName","setAuthorName","addEssay","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleSubmit","e","preventDefault","trim","alert","response","fetch","method","headers","body","JSON","stringify","content","isAnonymous","ok","Error","newEssay","json","error","console","className","children","onSubmit","type","value","onChange","target","placeholder"],"sources":["/Users/lance/just650/src/components/SubmitTab.js"],"sourcesContent":["// src/components/SubmitTab.js\n\nimport React, { useState } from 'react';\nimport { useEssays } from '../context/EssayContext';\n\nfunction SubmitTab() {\n  const [title, setTitle] = useState(''); // State for the title\n  const [essay, setEssay] = useState(''); // State for the essay content\n  const [authorName, setAuthorName] = useState(''); // State for the author's name\n  const { addEssay } = useEssays(); // Custom hook to access essay context\n\n  // Fetch the API base URL from environment variables\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate input fields\n    if (!title.trim()) {\n      alert('Title cannot be empty!');\n      return;\n    }\n\n    if (!essay.trim()) {\n      alert('Essay content cannot be empty!');\n      return;\n    }\n\n    try {\n      // Send POST request to submit the essay\n      const response = await fetch(`${API_BASE_URL}/essays`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: title.trim(),\n          content: essay.trim(),\n          isAnonymous: !authorName.trim(),\n          authorName: authorName.trim() || 'Anonymous',\n        }),\n      });\n\n      // Check if the response was successful\n      if (!response.ok) {\n        throw new Error('Failed to submit essay');\n      }\n\n      const newEssay = await response.json();\n\n      // Use the addEssay function to update the context\n      addEssay(newEssay);\n\n      // Reset form fields after submission\n      setTitle('');\n      setEssay('');\n      setAuthorName('');\n      alert('Essay submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting essay:', error);\n      alert('There was an error submitting your essay. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"submit-page\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Essay Title\"\n          className=\"title-input\" // Optional class for styling\n        />\n        <textarea\n          value={essay}\n          onChange={(e) => setEssay(e.target.value)}\n          placeholder=\"Write your essay here\"\n          className=\"essay-input\" // Optional class for styling\n        />\n        <input\n          type=\"text\"\n          value={authorName}\n          onChange={(e) => setAuthorName(e.target.value)}\n          placeholder=\"Author Name (Leave blank if you want to remain anonymous)\"\n          className=\"author-name-input\"\n        />\n        <button className=\"subessay-button\" type=\"submit\">\n          Submit Essay\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SubmitTab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}