{"ast":null,"code":"var _jsxFileName = \"/Users/lance/just650/src/context/EssayContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/EssayContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EssayContext = /*#__PURE__*/createContext();\nexport const useEssays = () => {\n  _s();\n  return useContext(EssayContext);\n};\n_s(useEssays, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const EssayProvider = ({\n  children\n}) => {\n  _s2();\n  const [essays, setEssays] = useState([]);\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // Access the environment variable\n\n  useEffect(() => {\n    const fetchEssays = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/essays`); // Use the base URL from the environment variable\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setEssays(data);\n      } catch (error) {\n        console.error('Error fetching essays:', error);\n      }\n    };\n    fetchEssays();\n  }, [API_BASE_URL]);\n  const addEssay = async newEssay => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newEssay)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setEssays(prevEssays => [...prevEssays, data]);\n    } catch (error) {\n      console.error('Error adding essay:', error);\n    }\n  };\n  const likeEssay = async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays/${id}/like`, {\n        method: 'PUT'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const updatedEssay = await response.json();\n      setEssays(prevEssays => prevEssays.map(essay => essay._id === updatedEssay._id ? updatedEssay : essay));\n    } catch (error) {\n      console.error('Error liking essay:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EssayContext.Provider, {\n    value: {\n      essays,\n      addEssay,\n      likeEssay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(EssayProvider, \"9Ct9syLiQRBp2XKakE1dIip2l2I=\");\n_c = EssayProvider;\nvar _c;\n$RefreshReg$(_c, \"EssayProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","EssayContext","useEssays","_s","EssayProvider","children","_s2","essays","setEssays","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchEssays","response","fetch","ok","Error","data","json","error","console","addEssay","newEssay","method","headers","body","JSON","stringify","prevEssays","likeEssay","id","updatedEssay","map","essay","_id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lance/just650/src/context/EssayContext.js"],"sourcesContent":["// src/context/EssayContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst EssayContext = createContext();\n\nexport const useEssays = () => useContext(EssayContext);\n\nexport const EssayProvider = ({ children }) => {\n  const [essays, setEssays] = useState([]);\n\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // Access the environment variable\n\n  useEffect(() => {\n    const fetchEssays = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/essays`); // Use the base URL from the environment variable\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setEssays(data);\n      } catch (error) {\n        console.error('Error fetching essays:', error);\n      }\n    };\n\n    fetchEssays();\n  }, [API_BASE_URL]);\n\n  const addEssay = async (newEssay) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newEssay),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setEssays((prevEssays) => [...prevEssays, data]);\n    } catch (error) {\n      console.error('Error adding essay:', error);\n    }\n  };\n\n  const likeEssay = async (id) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/essays/${id}/like`, {\n        method: 'PUT',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const updatedEssay = await response.json();\n      setEssays((prevEssays) =>\n        prevEssays.map((essay) => (essay._id === updatedEssay._id ? updatedEssay : essay))\n      );\n    } catch (error) {\n      console.error('Error liking essay:', error);\n    }\n  };\n\n  return (\n    <EssayContext.Provider value={{ essays, addEssay, likeEssay }}>\n      {children}\n    </EssayContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA3CD,SAAS;AAEtB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAC,CAAC;;EAEzDd,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,SAAS,CAAC,CAAC,CAAC;QACxD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,SAAS,CAACU,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMa,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,SAAS,EAAE;QACrDe,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCX,SAAS,CAAEqB,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEX,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMU,SAAS,GAAG,MAAOC,EAAE,IAAK;IAC9B,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,WAAWsB,EAAE,OAAO,EAAE;QAChEP,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMe,YAAY,GAAG,MAAMlB,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CX,SAAS,CAAEqB,UAAU,IACnBA,UAAU,CAACI,GAAG,CAAEC,KAAK,IAAMA,KAAK,CAACC,GAAG,KAAKH,YAAY,CAACG,GAAG,GAAGH,YAAY,GAAGE,KAAM,CACnF,CAAC;IACH,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY,CAACmC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,MAAM;MAAEe,QAAQ;MAAEQ;IAAU,CAAE;IAAAzB,QAAA,EAC3DA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnC,GAAA,CA/DWF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}